{"name":"Web Development","fileNamePath":"C:\\Users\\berkh\\Documents\\ElectronFileCabinet\\webDevelopment.debx","mainFolderArray":[{"name":"!!!","subFolderArray":[]},{"name":"%20","subFolderArray":[{"name":"%20","noteArray":[{"text":"This is how you encode a space in a URL"}]}]},{"name":"API request","subFolderArray":[{"name":"Parameters","noteArray":[{"text":"Looking a t the URL, anything past the ? mark is a parameter.\nIt will have a Key and a value. Parameters are seperated by a & mark.`"},{"text":"querystring = qs\n###############################################################\napp.post(\"/\", (req, res) => {\n  // comes from form\n  console.log(req.body.crypto);\n  console.log(req.body.fiat);\n  // let baseURL = \"https://apiv2.bitcoinaverage.com/indices/global/ticker/\";\n  let baseURL = \"https://apiv2.bitcoinaverage.com/convert/global\";\n  // let finalURL = `${baseURL}${req.body.crypto}${req.body.fiat}`\n  // build url\n  let options = {\n    url: baseURL,\n    method: \"GET\",\n    qs: {\n      from: req.body.crypto,\n      to: req.body.fiat,\n      amount: req.body.amount\n    }\n  };\n  // make request\n  request(options, (error, responce, body) => {\n    let data = JSON.parse(body);\n    console.log(\"David\");\n    console.log(data);\n    console.log(data.price);\n    res.write(`<p>The current date is ${data.time}</p>`);\n    res.write(\n      `<h1>${req.body.amount}${req.body.crypto} is currently worth ${data.price}${req.body.fiat}</h1>`\n    );\n    res.send();\n  });\n});"}]},{"name":"Requst Module","noteArray":[{"text":"const request = require(\"request\");\n\napp.post(\"/\", (req, res) => {\n  // comes from form\n  console.log(req.body.crypto);\n  console.log(req.body.fiat);\n  // build url\n  url = `https://apiv2.bitcoinaverage.com/indices/global/ticker/${req.body.crypto}${req.body.fiat}`;\n  // make request\n  request(url, (error, responce, body) => {\n    let data = JSON.parse(body);\n    console.log(\"David\");\n    console.log(data);\n\n    res.write(`<p>The current date is ${data.display_timestamp}</p>`);\n    res.write(\n      `<h1> This price of ${req.body.crypto} is ${data.last} ${req.body.fiat}</h1>`\n    );\n    res.send();\n  });\n});"}]}]},{"name":"Array Functions","subFolderArray":[{"name":".filter()","noteArray":[{"text":"let numbers = [3, 56, 2, 48, 5];\n\n//Filter - Create a new array by keeping the items that return true.\nlet filtered = numbers.filter(num =>{return num <= 10});\nconsole.log(filtered)"},{"text":"Array(3)\n0: 3\n1: 2\n2: 5\nlength: 3"}]},{"name":".find()","noteArray":[{"text":"let numbers = [3, 56, 2, 48, 5];\n\n//Find - find the first item that matches from an array.\nlet a = numbers.find(num =>{ return num < 3});\nconsole.log(a);"},{"text":"2"}]},{"name":".findIndex()","noteArray":[{"text":"let numbers = [3, 56, 2, 48, 5];\n\n//FindIndex - find the index of the first item that matches.\nlet b = numbers.findIndex(num =>{ return num < 3});\nconsole.log(b);"},{"text":"2"}]},{"name":".map()","noteArray":[{"text":"let numbers = [3, 56, 2, 48, 5];\n\n//Map -Create a new array by doing something with each item in an array.\nlet newNumbers = numbers.map(x => {return (x * 2)});\nconsole.log(newNumbers);"},{"text":"Array(5)\n0: 6\n1: 112\n2: 4\n3: 96\n4: 10\nlength: 5"}]},{"name":".reduce()","noteArray":[{"text":"let numbers = [3, 56, 2, 48, 5];\n\n//Reduce - Accumulate a value by doing something to each item in an array.\nlet reduced = numbers.reduce((ac, currentNum) =>{\n return ac + currentNum\n})\nconsole.log(reduced)"},{"text":"114"}]}]},{"name":"Ascii Art","subFolderArray":[{"name":"DEBX","noteArray":[]}]},{"name":"BoilerPlate","subFolderArray":[{"name":"Webpack Babel","noteArray":[{"text":"git clone https://github.com/sweetcoco/webpack-babel-boilerplate.git your-app # change your-app to the name of your project\ncd your-app\ngit remote remove origin\n# edit the package.json, then continue on\nnpm install\nnpm run dev"}]}]},{"name":"Chrome Developer Tools","subFolderArray":[{"name":"Break Point's","noteArray":[{"text":"Watch Variables\nClick on Sources.\nFind the js file you want to add a breakpoint to.\nClick on the line number to add a breakpoint.\nRefresh the page.\nIt will pause at the break point.\nUse the step button to step through each line, or use F9.\nUse step out of current function to skip the function if you know it already works.\nUse the Resume script execution button, to let the code run normal again."},{"text":"Hover over a variable in the sources file, and it will show you the current value of it."}]},{"name":"Change Variable Name","noteArray":[{"text":"click edit and then replace.\ntype in var Name and the new var name\nclick replace all icon."}]},{"name":"Dual Console Screen","noteArray":[{"text":"Press esc to open up the console when you have another screen open like Sources."}]},{"name":"Event Listener Breakpoints","noteArray":[{"text":"Click on Sources.\nClick on Event Listener Breakpoints.\nClick on Mouse.\nThis will cause a breakpoint on any mouse event."}]},{"name":"Tips","noteArray":[{"text":"Press F12 to bring up developer tools in google chrome.\n   \nPress control + J to bring up downloads.\n   \nclear()      This will clear the console screen.\n   \nBreak Point's->\n\tgo to sources.\n\tfind script\n\tclick on a line # to set a break point\t\n\trun script\n\thover over a variable to get it's value\n   \nMutiple Break Point's->\n\tYou can step into them\n\tYou can step into a function too\n   \nBreak Point's in your scripts->\n\tYou can set breakpoints in your scripts, by using the word debugger.\nif (area < 100){\ndebugger   \n}\n\tA break point is set if the developer tools are open.\n\t\n   \nTo create your own error, use the following:\n\tthrow new Error(\"message\");"}]},{"name":"Watch Variables","noteArray":[{"text":"Click on Sources.\nClick on watch.\nClick the add button.\nType the name of the Variable.\nClick on the refresh button every time you want to see the update of the variable."},{"text":"Hover over a variable in the sources file, and it will show you the current value of it."}]}]},{"name":"CODE SAMPLE'S","subFolderArray":[{"name":"border css","noteArray":[{"text":"border: 1px solid #ced4da;"}]},{"name":"isNaN()","noteArray":[{"text":"function milliseconds(x) {\n  if (isNaN(x)) {\n    return 'Not a Number!';\n  }"}]},{"name":"Refresh a page","noteArray":[{"text":"location.reload();"}]},{"name":"slider input","noteArray":[{"text":"<div id=\"sliderContainer\">\n      <input id=\"sliderInput\" type=\"range\" min=\"1\" max=\"7\" value=\"1\" />\n      <h1 id=\"label\">Cycle Every Sixty Seconds</h1>\n    </div>\n\n#sliderContainer {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin-top: 4rem;\n  display: flex;\n  justify-content: center;\n}\n#sliderInput {\n  width: 80%;\n  margin: 0 auto;\n}\n\nlet slider = document.querySelector(\"#sliderInput\");\nslider.addEventListener(\"change\", () => {\n  clearInterval(timer);\n  let labelValue;\n  switch (Number(slider.value)) {\n    case 1:\n      timeMill = 60000;\n      labelValue = \"Cycle Every Sixty Seconds\";\n      break;\n    case 2:\n      timeMill = 50000;\n      labelValue = \"Cycle Every Fifthty Seconds\";\n      break;\n    case 3:\n      timeMill = 40000;\n      labelValue = \"Cycle Every Forty Seconds\";\n      break;\n    case 4:\n      timeMill = 30000;\n      labelValue = \"Cycle Every Thirty Seconds\";\n      break;\n    case 5:\n      timeMill = 20000;\n      labelValue = \"Cycle Every Twenty Seconds\";\n      break;\n    case 6:\n      timeMill = 10000;\n      labelValue = \"Cycle Every Ten Seconds\";\n      break;\n    case 7:\n      timeMill = 1000;\n      labelValue = \"Cycle Every Second\";\n      break;\n    default:\n      console.log(\"Invalid Entry\");\n      labelValue = \"Invalid Entry\";\n  }\n  label.textContent = labelValue;\n\n});"}]},{"name":"Switch Statement","noteArray":[{"text":"switch (slider.value) {\n    case 1:\n      timeMill = 60000;\n      break;\n    case 2:\n      timeMill = 50000;\n      break;\n    case 3:\n      timeMill = 40000;\n      break;\n    case 4:\n      timeMill = 30000;\n      break;\n    case 5:\n      timeMill = 20000;\n      break;\n    case 6:\n      timeMill = 10000;\n      break;\n    default:\n      console.log(\"Invalid Entry\");\n  }"}]}]},{"name":"Computer Short Cuts","subFolderArray":[{"name":"Visual Studio Code","noteArray":[{"text":"select the text you want to bookmark\nright click bookmarks toggle or\nalt+ctrl+k\nclick a tag and it will highlight it's pair\nctrl + g   => goto line\nAlt+ ↑ / ↓ Move line up/down\nCtrl+] / [ Indent/outdent line\nCtrl+F Find\nF12 Go to Definition\nCtrl+K S Save All\nCtrl+K F12 Open Definition to the side\nCtrl+K Z Zen Mode (Esc Esc to exit)"}]},{"name":"Window's","noteArray":[{"text":"control + left or right arrow. Move through code.\nAlt + Tab: Move from one window to another.\nWindows + prt sc: Capture a Screen Shot. => \nthe screen will blink and store the screen shot in your picture's folder under screenshots.\nWindows + Up Arrow: Maximize current window.\nWindows + Down Arrow: Minimize current window.\nWindows + Left Arrow: Send current window left.\nWindows + Right Arrow: Send current window right.\nWindows + D: Show or hide desktop.\nWindows + E: Launch Windows Explorer.\nWindows + L: Lock your PC.\nf5: Refresh.\nf6: Address bar.\nf11: Fullscreen.\nf12: Developer Tools.\nfn + f2: Turn wireless on and off\nfn + F9: Disables the touchpad.\nfn + f3 or f4: Keyboard Lights.\nCTRL + Z: Undo.\nCTRL + X: Cut.\nCTRL + C: Copy.\nCTRL + V: Paste.\nCTRL + A: Select All.\nCTRL + TAB: SUBLIME TABS"}]}]},{"name":"CSS","subFolderArray":[{"name":".cssText","noteArray":[{"text":"document.getElementById(\"myP\").style.cssText = \"background-color:pink;font-size:55px;border:2px dashed green;color:white;\""}]},{"name":"Display","noteArray":[{"text":"You can't give an inline element like a span a width, you have to change it's display to in-line block to give it a width."},{"text":"Images are inline but for some reason you can give them a width."},{"text":"h1{\n  visibility: hidden;\n}\nThis keep's it's space in the document, but you can't see it."},{"text":"h2.a {\n  visibility: visible;\n}\n\nh2.b {\n  visibility: hidden;\n}"}]},{"name":"Position","noteArray":[{"text":"Static - this is the default value, all elements are in order as they appear in the document.\nRelative - the element is positioned relative to its normal position.\nAbsolute - the element is positioned absolutely to its first positioned parent. Parent element must have,\n    position: relative or it will be relative to the body.\nFixed - the element is positioned related to the browser window.\nSticky - the element is positioned based on the user's scroll position."},{"text":"top: 40px; \nleft: 40px;\nright: 6px;\nbottom: 6px;\nz-index: 3;"},{"text":"top: 40px => 40 px margin from top.\nleft: 40px => 40px margin from left."}]},{"name":"rem","noteArray":[{"text":"rem = ?px / RootPx        ==>32px /16rootpx == 2 rem"}]}]},{"name":"ejs","subFolderArray":[{"name":"hide","noteArray":[{"text":"<% newListItems.forEach(element => { %>\n  <div class=\"item\">\n    <input type=\"checkbox\" />\n    <p><%= element %></p>\n  </div>\n  <% }); %>"}]},{"name":"include()","noteArray":[{"text":"<%- include(\"header.ejs\"); -%>\n<h1>Home</h1>\n<%- include(\"footer.ejs\"); -%>"}]},{"name":"variable","noteArray":[{"text":"<p><%= element %></p>"}]}]},{"name":"Electron","subFolderArray":[{"name":"electron-builder","noteArray":[{"text":"npm install electron-builder --save-dev"},{"text":"add to package.json =>\n\n  \"build\": {\n    \"appId\": \"com.deb.fileCab\",\n    \"win\": {\n      \"target\": \"nsis\",\n      \"icon\": \"build/icon.ico\"\n    }\n  },"},{"text":"add to package.json =>\n\nadd to scripts =>\n\n\"dist\": \"build\""},{"text":"make a build folder in your project folder and paste a icon in it. name it icon.ico"},{"text":"{\n  \"name\": \"filecab\",\n  \"version\": \"1.0.0\",\n  \"description\": \"file cab program\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\",\n    \"electron\": \"electron .\",\n    \"electronConsole\": \".\\\\node_modules\\\\electron\\\\dist\\\\electron.exe .\",\n    \"start\": \".\\\\node_modules\\\\electron\\\\dist\\\\electron.exe .\",\n    \"dist\": \"build\"\n  },\n  \"author\": \"David Berkheimer\",\n  \"license\": \"ISC\",\n  \"devDependencies\": {\n    \"electron\": \"^4.1.0\",\n    \"electron-builder\": \"^20.39.0\"\n  },\n  \"build\": {\n    \"appId\": \"com.deb.fileCab\",\n    \"win\": {\n      \"target\": \"nsis\",\n      \"icon\": \"build/icon.ico\"\n    }\n  },\n  \"dependencies\": {}\n}"},{"text":"type in command line interface\nnpm run dist"},{"text":"There is a new folder in your project called dist\nclicking on the filecab setup 10.0.0exe will install the program on your computer."},{"text":"Having trouble building?\ndelete every file in the dist folder or copy it to a safe place and npm run dist."}]},{"name":"electron-builder NEW","noteArray":[{"text":"npm install -g electron-builder"},{"text":"icon\nname the icon icon.ico and put it in the build foler. It has to be 256 x 256\nif it is a png open it in gimp and the export it and select ico as export type"},{"text":"put icon.ico in build folder"},{"text":"add to scripts\n\"pack\": \"build --dir\","},{"text":"add to package.json\n  \"build\": {\n    \"appId\": \"com.deb.moneylog\",\n    \"productName\": \"Money Log\",\n    \"win\": {\n      \"target\": \"nsis\",\n      \"icon\": \"build/icon.ico\"\n    }\n  },"},{"text":"{\n  \"name\": \"momsmoney\",\n  \"version\": \"1.0.0\",\n  \"description\": \"log\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\",\n    \"start\": \"electron .\",\n    \"pack\": \"build --dir\",\n    \"electron\": \"electron .\",\n    \"electronConsole\": \".\\\\node_modules\\\\electron\\\\dist\\\\electron.exe .\",\n    \"startC\": \".\\\\node_modules\\\\electron\\\\dist\\\\electron.exe .\"\n  },\n  \"author\": \"David E. Berkheimer\",\n  \"license\": \"ISC\",\n  \"dependencies\": {},\n  \"build\": {\n    \"appId\": \"com.deb.moneylog\",\n    \"productName\": \"Money Log\",\n    \"win\": {\n      \"target\": \"nsis\",\n      \"icon\": \"build/icon.ico\"\n    }\n  },\n  \"devDependencies\": {\n    \"electron\": \"^6.0.9\",\n    \"electron-builder\": \"^21.2.0\"\n  }\n}"},{"text":"Hide Developer tools!!!"},{"text":"electron-builder build -w        => the w is for windows after you run this command look in dist folder for your .exe file to run"},{"text":"Goto the dist folder in the project and click on file calendar Setup 1.0.0.exe to install on your computer."}]},{"name":"electron-packager","noteArray":[{"text":"electron-packager . ElectonTypGame --platform=win32 --icon=build/icon.ico"},{"text":"This is the newest way. sept 14 2022"},{"text":"it will create a new folder inYour Project=> \\ElectonTypGame-win32-x64"},{"text":"To ovewrwrite type=>\nelectron-packager . ElectonTypGame --platform=win32 --icon=build/icon.ico --overwrite"}]},{"name":"Installing Electron","noteArray":[{"text":"npm init\n\nGo to the folder were you our going to write your app.js in the command line interface.\ntype => npm init\nEnter your start up settings that it ask's you for.\nMake sure your entry point is index.js, this is the first script to run.\nNPM then creates your JSON file for your project. package.json\n\nscripts in the json file are command line commands\nYou can type npm test in the command line and it will run that script."},{"text":"At this point, you'll need to install electron itself. The recommended way of doing so is to install it as a\n development dependency in your app, which allows you to work on multiple apps with different Electron versions.\n To do so, run the following command from your app's directory:\n\nnpm install --save-dev electron"}]},{"name":"IPC","noteArray":[{"imagePath":"C:\\Users\\David\\Documents\\ElectronFileCabinet\\photos\\ipc.jpeg","text":"inner process communication  => click for chart"}]},{"name":"Script","noteArray":[{"text":"\"scripts\": {\n    \"start\": \"webpack-dev-server\",\n    \"electron\": \"electron .\",\n    \"electronConsole\": \".\\\\node_modules\\\\electron\\\\dist\\\\electron.exe .\"\n  },\nnpm run electronConsole => will make the console.log() function work"}]},{"name":"Start Project","noteArray":[{"text":"npm init\nnpm install --save-dev electron\n\ncreate index.js file\nconst electron = require('electron');\n//start the app\nconst { app } = electron;\n//watch the app object and wait for a ready event\napp.on('ready', ()=>{\n//function to run when the app is ready\nconsole.log('app is now ready');\n});"},{"text":"go to package.json file =>\n  \"scripts\": {\n   \"electron\": \"electron .\"\n  }\n\nThe . means run electron based on the current working directory\nIt will find and run index.js because it is the main in the package.json\n\nGo to command line interface and type:  npm run electron\nThis is how you run scripts in the package.json"},{"text":"create index.html file\n<head>\n</head>\n<body>\n  <h1>Video Info</h1>\n</body>\n\nindex.js\nconst electron = require('electron');\n//start the app\nconst { app, BrowserWindow } = electron;\n//watch the app object and wait for a ready event\napp.on('ready', ()=>{\n//function to run when the app is ready\n//create browser window\nconst mainWindow = new BrowserWindow({});\n//instruct main window to load html file, from the file system not http:\nmainWindow.loadURL(`file://${__dirname}/index.html`);\n});"},{"text":"\"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\",\n    \"start\": \"electron .\",\n    \"pack\": \"build --dir\",\n    \"electron\": \"electron .\",\n    \"electronConsole\": \".\\\\node_modules\\\\electron\\\\dist\\\\electron.exe .\",\n    \"startC\": \".\\\\node_modules\\\\electron\\\\dist\\\\electron.exe .\"\n  },"}]},{"name":"Tips","noteArray":[{"text":"go to package.json file =>\n  \"scripts\": {\n   \"electron\": \"electron .\"\n  }\n\nThe . means run electron based on the current working directory\nIt will find and run index.js because it is the main in the package.json\n\nGo to command line interface and type:  npm run electron\nThis is how you run scripts in the package.json"},{"text":"control + r  => will reload the html only, not js files."},{"text":"Developer Tools\nview - toggle developer tools"},{"text":"type in js code, and it will pasue execution at that point\ndebugger"}]},{"name":"Toggle Developer Tools","noteArray":[{"text":"ctrl + shift + i"}]},{"name":"Update Electron","noteArray":[{"text":"Updating the version used in package.json\nStart a terminal and run this command:\nnpm install electron@latest\nThis will give me the currently latest stable version of electron. And I can see that by opening package.json and \nlooking at the electron version which is now:","imagePath":"C:\\Users\\berkh\\Pictures\\Karren.jpg"}]}]},{"name":"Environment Variable","subFolderArray":[{"name":"Environment variable","noteArray":[{"text":"click on  Control Panel then System then Advanced system settings then Environment variables.\nSelect PATH then click edit.\nAdd a ; and add new path to the end of the string.\nEXAMPLE: ADD Mongo PATH\nBefore\nC:\\Program Files\\heroku\\bin;C:\\Users\\David\\AppData\\Roaming\\npm\n\nAfter\nC:\\Program Files\\heroku\\bin;C:\\Users\\David\\AppData\\Roaming\\npm;C:\\Program Files\\MongoDB\\Server\\4.0\\bin"}]}]},{"name":"GIT","subFolderArray":[{"name":"-u","noteArray":[{"text":"-u stands for upstream\ngit push -u origin MyNewBranch\nIt remembers the conection so You can just type git push the next time."}]},{"name":"AAA","noteArray":[{"text":"Checkout just lets you see back in time =>\nCopy the Long commit Hash Number from the log\nType: git checkout <Paste in hash number>\nThis takes you back in time to check out your old code and then go back to where you were.\nTo go back to where you were(The Future) type: git checkout master\nswitch branches\ntype: git checkout MyNewBranch\nMessed up a File?\ntype: git checkout fileName.txt\nit will roll back to the last version that was commited\ngit checkout master\nThis will take you back. form were you came from."},{"text":"Go back in time and Stay there=>\ngit reset --hard 0d1d7fc32\nThis will rollback to a previous commit and delete any thing after it in the chain."},{"text":"Experimental Branch =>\ncreate a new branch called MyNewBranch\ntype: git branch MyNewBranch\nfind out what branch you are on. Look for the *, it is the branch you are on.\ntype: git branch\nswitch branches\ntype: git checkout MyNewBranch\nMake some changes on your new branch.\nTo add all of the changes not staged for commit\nType: git add .\ngit commit -m \"added new feature\"\ngit push -u origin MyNewBranch\nto view git hub branches:\nfind your git hub page and click insights and then click network\ngo back to master branch\ngit checkout master\nto merge the MyNewBranch type:\ngit merge MyNewBranch\nTo push to gitHub type:\ngit push -u origin master\nto view git hub branches:\nfind your git hub page and click insights and then click network"}]},{"name":"Alias","noteArray":[{"text":"Create an Alias =>\ngit config --global alias.hist \"log --oneline --graph --decorate --all\"\nYou can check if it is listed =>\ngit config --list\nTo run this new alias =>\ngit hist"},{"text":"git config --global alias.l \"log\""},{"text":"My alias:\nalias.hist=log --oneline --graph --decorate --all\nalias.s=status\nalias.cm=commit -m\nalias.h=log --oneline --graph --decorate --all\nalias.l=log"}]},{"name":"Change last Message","noteArray":[{"text":"git commit --amend -m \"New commit message.\""}]},{"name":"Check Settings","noteArray":[{"text":"git config --list"},{"text":"git config user.name"},{"text":"git config user.email"},{"text":"git config --global -e\nYou will be able to edit in Vs code"}]},{"name":"delete branch","noteArray":[{"text":"git branch -d branchName\ngit branch -D branchName\ndo this from the master branch \n-d is for delete"}]},{"name":"Experimental Branch","noteArray":[{"text":"create a new branch called MyNewBranch\ntype: git branch MyNewBranch\nfind out what branch you are on. Look for the *, it is the branch you are on.\ntype: git branch\nswitch branches\ntype: git checkout MyNewBranch\nMake some changes on your new branch.\nTo add all of the changes not staged for commit\nType: git add .\ngit commit -m \"added new feature\"\ngit push -u origin MyNewBranch\nto view git hub branches:\nfind your git hub page and click insights and then click network\ngo back to master branch\ngit checkout master\nto merge the MyNewBranch type:\ngit merge MyNewBranch\nTo push to gitHub type:\ngit push -u origin master\nto view git hub branches:\nfind your git hub page and click insights and then click network"}]},{"name":"GIT add","noteArray":[{"text":"Type: git add app.js\nIt will add that file to git to track \n\nThen type: git status\nto see the changes"},{"text":"To add all of the changes not staged for commit\nType: git add .\n\nThen type: git status\nto see the changes"},{"text":"To add all files\ntype: git add ."}]},{"name":"Git branch","noteArray":[{"text":"create a new branch called MyNewBranch\ntype: git branch MyNewBranch"},{"text":"⇑⇓\nfind out what branch you are on. Look for the *, it is the branch you are on.\ntype: git branch"},{"text":"switch branches\ntype: git checkout MyNewBranch"},{"text":"switch to another branch\ngit switch myBranch"},{"text":"Rename a branch\ngit branch -M main"}]},{"name":"GIT checkout","noteArray":[{"text":"Copy the Long commit Hash Number from the log\nType: git checkout <Paste in hash number>\nThis takes you back in time to check out your old code and then go back to where you were.\nTo go back to where you were(The Future) type: git checkout master"},{"text":"switch branches\ntype: git checkout MyNewBranch"},{"text":"Messed up a File?\ntype: git checkout fileName.txt\nit will roll back to the last version that was commited"},{"text":"git checkout master\nThis wil take you back. form were you came from."}]},{"name":"Git clone","noteArray":[{"text":"type: git clone <URL You are cloning from github>"}]},{"name":"GIT commit","noteArray":[{"text":"This will actually save Your files that are tracked by Git\nType: git commit -m \"My first working version\"\nThe -m is for message\nThen type: git status\nto see the changes"}]},{"name":"Git diff","noteArray":[{"text":"Type: git diff fileName.txt\nIt will show you the differences in the file named fileName.txt since the last commit.\n(unstaged changes)"},{"text":"Type: git diff Head fileName.txt\nIt will show you the differences in the file named fileName.txt since the last commit.\n(unstaged changes and staged changes)"},{"text":"git diff\ngit diff Head\ngit diff test.txt\ngit diff Head test.txt\ngit diff branchOne branchTwo\ngit diff 209c219 ef2a893"}]},{"name":"GIT Error","noteArray":[{"text":"If You type: git commit\nBy mistake\nType: i\nfor insertion mode\nType: esc\nto get out \nType: :wq\nto quit"}]},{"name":"git hist","noteArray":[{"text":"alias.hist=log --oneline --graph --decorate --all"},{"text":"git hist"}]},{"name":"GIT init","noteArray":[{"text":"Get in the directory you want.\ntype: git init\nThis Makes a hidden directory called .git\nTo see this type ls - a"}]},{"name":"GIT log","noteArray":[{"text":"To see the git log\nType: git log\nTo get out of this type: q\nThe log starts at the bottom Use the arrow keys"},{"text":"To see more commits keep pressing return until you reach the end."}]},{"name":"Git merge","noteArray":[{"text":"To merge a branch you have to go back to the master branch\ntype: git checkout master\nTo merge  a branch called MyNewBranch\ntype: git merge MyNewBranch\nTo Exit\ntype: :q!"}]},{"name":"GIT remote","noteArray":[{"text":"type: git remote -v"}]},{"name":"GIT reset","noteArray":[{"text":"Go back in time permentally\ngit reset --hard 0d1d7fc32\nThis will rollback to a previous commit and delete any thing after it in the chain."}]},{"name":"git restore","noteArray":[{"text":"Go back to last commit.\ngit restore test.txt"}]},{"name":"Git status","noteArray":[{"text":"Type: git status\nIt will provide information"}]},{"name":"git switch","noteArray":[{"text":"switch to another branch\ngit switch myBranch"}]},{"name":"gitignore","noteArray":[{"text":"CLI type:\ntouch .gitignore"},{"text":"To open .gitignore type in bash terminal: start .gitignore\nopen git ignore and type the file or folder to ignore\nabout.html\nnode_modules/*"}]}]},{"name":"GitHub","subFolderArray":[{"name":"?can't push","noteArray":[{"text":"Go to the website and sign in on the web.\nTry to push again."}]},{"name":"Create Repository","noteArray":[{"text":"Goto github and click on create repository.\nGive it a name and description.\nChoose public.\nDon't create readme. \nClick create repository."},{"text":"Look for …or push an existing repository from the command line.\n\ngit remote add origin https://github.com/DEBXDEBX/FileCabinetV4.git\n\ngit push -u origin main"}]},{"name":"Git clone","noteArray":[{"text":"type: git clone <URL You are cloning from github>"}]},{"name":"gitignore","noteArray":[{"text":"CLI type:\ntouch .gitignore"},{"text":"open git ignore and type the file or folder to ignore\nabout.html\nnode_modules/*"}]},{"name":"publish your repo","noteArray":[{"text":"Go to repo on Git Hub\nclick settings\nclick on Pages\nunder Branch, select main branch\nsave if it gives you an option\nweb address \"https://debxdebx.github.io/MU128Guide/\""}]},{"name":"push branch to github","noteArray":[{"text":"git push -u origin experimental\nexperimental is the branch name"}]},{"name":"push to github","noteArray":[{"text":"git push -u origin master\nThis pushes Your local repo to git hub"}]}]},{"name":"heroku","subFolderArray":[{"name":"GIT","noteArray":[{"text":"Make sure you have GIT in the directory You are deploying\nType: git status to see if git is there, if not =>\nType: git init\nType: git status\n//add all project files and folders\nType: git add app.js \nType: git add package.json\nType: git add views/\n// Make Sure package.json has a start=>\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\",\n    \"start\": \"node app.js\"\n  },\n//\nCLI type:\ntouch .gitignore\nTo open .gitignore type in bash terminal: start .gitignore\nopen git ignore and type the file or folder to ignore\nabout.html\nnode_modules/*\n\ncreate a file called Procfile in your project. open it and type:\nweb: node app.js\nsave your Procfile.\n\n\n//git commit\ntype: git commit -m \"initial commit\"\n//Make space on heroku, generate a URL, add assoicate it with this git repository\nType: heroku create\nIT Spits Out=>\nCreating app... done, ⬢ stark-castle-27786\nhttps://stark-castle-27786.herokuapp.com/ | https://git.heroku.com/stark-castle-27786.git\n//make website with master branch\nType: git push heroku master"}]},{"name":"heroku logs","noteArray":[{"text":"In the command line interface, type the following to see \nerror messages when something goes wrong with heroku\nType: heroko logs"}]},{"name":"Log In","noteArray":[{"text":"Run commands\ntype: heroku login \nThen enter your e-mail\nThen enter your password"},{"text":"type: heroku login -i\nThen enter your e-mail\nThen enter your password"}]},{"name":"Rename App","noteArray":[{"text":"Goto your project folder and type:\nheroku apps: rename debx\n\nThe new name is debx\n !    Name must start with a letter, end with a letter or digit and can only contain lowercase letters,\n !    digits, and dashes."}]},{"name":"Run Commands","noteArray":[{"text":"See a list of files on heroku\ntype: heroku run ls"},{"text":"See a list of node modules\ntype: heroku run ls node_modules"},{"text":"Install mongoose\ntype: heroku run npm install mongoose --save"}]}]},{"name":"HTML","subFolderArray":[{"name":"target","noteArray":[{"text":"target=\"_blank\"\nOpens link in new page."}]}]},{"name":"Javascript","subFolderArray":[{"name":"Back slash character","noteArray":[{"text":"var = David said/\"Good Bye/\"\n   \nvar Is David said \"Good Bye\"\n   \nTo use a backslash, put two backslashes togather. Thisis a backslash//"}]},{"name":"break; and continue;","noteArray":[{"text":"You can't use break or continue on a forEach loop.\nYou have to use a for loop.\n\n// fill an array with nemo 1000 times\nconst largeArray = new Array(1000).fill('nemo');\n\nfunction findNemo(array){\n  //set timer\n  let t0 = performance.now();\n  array.forEach((element, index) => {\n    if(element === 'nemo'){\n      console.log(`${index} item: ${element}`);\n      console.log('Found nemo');\n    }\n  });\n  //set timer\n  let t1 = performance.now();\n  //log timer difference\n  console.log(`Call to find nemo took ${t1 - t0} milliseconds`);\n}\n\n//call funtion\nfindNemo(largeArray);\n\n\nfunction findNemo2(array){\n  console.log('findNemo2 called');\n    for(let i =0; i <= array.length; i++){\n      if(array[i] === 'nemo'){\n        console.log(`${i} item: ${array[i]}`);\n        console.log('Found nemo');\n        break;\n      }\n\n    }\n}\n\n//call funtion two\nfindNemo2(largeArray);"}]},{"name":"Built in Methods","noteArray":[{"text":"alert(\"Hello World\");\n   \nconsole.log(\"Hello World\");\n   \nprompt(\"What is your name\");\n   \nvar userName = prompt(\"What is your Name\");\n   \n**********************************\nindexOF( )  pass in a string\n\nvar answer = \"no\";\n\ndo{\n answer = prompt(\"Are we ther yet\");\n}while(answer.indexOf(\"yes\") === -1)\n\nalert(\"Yeah we made it\");\n\nalert(answer.indexOf(\"yes\"));\n//answer.indexOf(\"yes\") returns a positive when\n//it is anywhere in the answer.\n\n//answer.indexOf(\"yes\") returns a negitive 1 when\n//when it is not found\n\n//if yes is the first letter of answer.indexOf(\"yes\") returns 0\n//if yes starts the third letter of answer.indexOf(\"yes\") returns 2\n*********************************\n\n   \n***************************\nstring.lenth   returns length of string\n\nvar str = \"hello\"; \n\nfor(var i = 0; i < str.length; i++){\n\tconsole.log(str[i]);\n}\n***************************\n   \n**************************\nREPLACE A DASH WITH AN UNDERSCORE\nThe g stands for global, witch means replace all instances in the string.\n\nfunction kebabToSnake(strChunk){\n\tvar newString = strChunk.replace(/-/g,\"_\");\n    return newString;\n}\n\nvar aaa = kebabToSnake(\"hello-world\");\nvar bbb = kebabToSnake(\"dogs-are-awesome\");\nvar ccc = kebabToSnake(\"blah\");\n\nconsole.log(aaa);\nconsole.log(bbb);\nconsole.log(ccc);\n************************\n   \n**************************\nsetInterval(anotherFunction, interval);            interval is in miliseconds\n-------------------------------------\n\nfunction sing(){\n\tconsole.log(\"twinkle twinkle...\");\n\tconsole.log(\"how i wonder....\");\n}\n\nsing();\nsetInterval(sing, 1000);\n\n\n   \n**********************************\nI am an anonymous function!\n---------------------------------\nsetInterval(function(){\n\tconsole.log(\"I am an anonymous function!\");\n\tconsole.log(\"THIS IS AWESOME!\");\n}, 2000);\n***********************************\n   \n***************************"}]},{"name":"Console Methods","noteArray":[{"text":"console.table({a:1, b:2});\nconsole.error(\"This is some error\");\nconsole.clear();\nconsole.warn(\"this is a warning\");\n\nconsole.time(\"hello\");\nconsole.log(\"Hello\"); 20times\nconsole.timeEnd(\"hello\");"}]},{"name":"console.log();","noteArray":[{"text":"console.log(\n  'Nothing here %cHi Cat %cHey Bear',  // Console Message\n  'color: blue', 'color: red' // CSS Style\n);"},{"text":"console.log\nconsole.info\nconsole.debug\nconsole.warn\nconsole.error\nAny yup, you can style the rest of them as well!\n\nconsole.log('%cconsole.log', 'color: green;'); console.info('%cconsole.info', 'color: green;'); console.debug('%cconsole.debug', 'color: green;'); console.warn('%cconsole.warn', 'color: green;'); console.error('%cconsole.error', 'color: green;');"}]},{"name":"Date","noteArray":[{"text":"const getAndSetDate = () => {\n  el.todayDate.textContent = new Date().toDateString();\n};"}]},{"name":"Declare an Object","noteArray":[{"text":"var person = {\nname:  \"Cindy\",\nage:  32,\ncity:  \"Missoula\"\n} ;"},{"text":"*************\n// bracket notation, similar to arrays:\nconsole.log(person[\"name\"] ) ;\n\n// dot notation:\nconsole.log( person.name ) ;"},{"text":"**********************\nEmpty Object\n\nvar someObject = { } ;\n\nsomeObject.name = \"David\" ;\nsomeObject.age = 45;"}]},{"name":"Functions","noteArray":[{"text":"Function Expression's =>\n\nlet greet = function(){\n  console.log('Hello');\n};"},{"text":"function dosomething( ) {\n     console.log(\"HELLO WORLD\");\n}"},{"text":"function echo(str, num){\n    for(var i = 0; i < num; i++){\n         console.log(str);\n    }\n}\n\necho(\"echo !!!!\", 10);\necho(\"tater tots\", 3);"}]},{"name":"Hacks","noteArray":[{"text":"12 Extremely Useful Hacks for JavaScript\n12-javascripts-hacks In this post I will share 12 extremely useful hacks for JavaScript. These hacks reduce the code and will help you to run optimized code. So let’s start hacking!\n\n1) Converting to boolean using !! operator\nSometimes we need to check if some variable exists or if it has a valid value, to consider them as true value. For do this kind of validation, you can use the !! (Double negation operator) a simple !!variable, which will automatically convert any kind of data to boolean and this variable will return false only if it has some of these values: 0, null, \"\", undefined or NaN, otherwise it will return true. To understand it in practice, take a look this simple example:\n\nfunction Account(cash) {\n    this.cash = cash;\n    this.hasMoney = !!cash;\n}\n\nvar account = new Account(100.50);\nconsole.log(account.cash); // 100.50\nconsole.log(account.hasMoney); // true\n\nvar emptyAccount = new Account(0);\nconsole.log(emptyAccount.cash); // 0\nconsole.log(emptyAccount.hasMoney); // false\nIn this case, if an account.cash value is greater than zero, the account.hasMoney will be true.\n\n2) Converting to number using + operator\nThis magic is awesome! And it’s very simple to be done, but it only works with string numbers, otherwise it will return NaN (Not a Number). Have a look on this example:\n\nfunction toNumber(strNumber) {\n    return +strNumber;\n}\n\nconsole.log(toNumber(\"1234\")); // 1234\nconsole.log(toNumber(\"ACB\")); // NaN\nThis magic will work with Date too and, in this case, it will return the timestamp number:\n\nconsole.log(+new Date()) // 1461288164385\n3) Short-circuits conditionals\nIf you see a similar code:\n\nif (conected) {\n    login();\n}\nYou can shorten it by using the combination of a variable (which will be verified) and a function using the && (AND operator) between both. For example, the previous code can become smaller in one line:\n\nconected && login();\nYou can do the same to check if some attribute or function exists in the object. Similar to the below code:\n\nuser && user.login();\n4) Default values using || operator\nToday in ES6 there is the default argument feature. In order to simulate this feature in old browsers you can use the || (OR operator) by including the default value as a second parameter to be used. If the first parameter returns false the second one will be used as a default value. See this example:\n\nfunction User(name, age) {\n    this.name = name || \"Oliver Queen\";\n    this.age = age || 27;\n}\n\nvar user1 = new User();\nconsole.log(user1.name); // Oliver Queen\nconsole.log(user1.age); // 27\n\nvar user2 = new User(\"Barry Allen\", 25);\nconsole.log(user2.name); // Barry Allen\nconsole.log(user2.age); // 25\n5) Caching the array.length in the loop\nThis tip is very simple and causes a huge impact on the performance when processing large arrays during a loop. Basically, almost everybody writes this synchronous for to iterate an array:\n\nfor(var i = 0; i < array.length; i++) {\n    console.log(array[i]);\n}\nIf you work with smaller arrays – it’s fine, but if you process large arrays, this code will recalculate the size of array in every iteration of this loop and this will cause a bit of delays. To avoid it, you can cache the array.length in a variable to use it instead of invoking the array.length every time during the loop:\n\nvar length = array.length;\nfor(var i = 0; i < length; i++) {\n    console.log(array[i]);\n}\nTo make it smaller, just write this code:\n\nfor(var i = 0, length = array.length; i < length; i++) {\n    console.log(array[i]);\n}\n6) Detecting properties in an object\nThis trick is very useful when you need to check if some attribute exists and it avoids running undefined functions or attributes. If you are planning to write cross-browser code, probably you will use this technique too. For example, let’s imagine that you need to write code that is compatible with the old Internet Explorer 6 and you want to use the document.querySelector(), to get some elements by their ids. However, in this browser this function doesn’t exist, so to check the existence of this function you can use the in operator, see this example:\n\nif ('querySelector' in document) {\n    document.querySelector(\"#id\");\n} else {\n    document.getElementById(\"id\");\n}\nIn this case, if there is no querySelector function in the document object, we can use the document.getElementById() as fallback.\n\n7) Getting the last item in the array\nThe Array.prototype.slice(begin, end) has the power to cut arrays when you set the begin and end arguments. But if you don’t set the end argument, this function will automatically set the max value for the array. I think that few people know that this function can accept negative values, and if you set a negative number as begin argument you will get the last elements from the array:\n\nvar array = [1,2,3,4,5,6];\nconsole.log(array.slice(-1)); // [6]\nconsole.log(array.slice(-2)); // [5,6]\nconsole.log(array.slice(-3)); // [4,5,6]\n8) Array truncation\nThis technique can lock the array’s size, this is very useful to delete some elements of the array based on the number of elements you want to set. For example, if you have an array with 10 elements, but you want to get only the first five elements, you can truncate the array, making it smaller by setting the array.length = 5. See this example:\n\nvar array = [1,2,3,4,5,6];\nconsole.log(array.length); // 6\narray.length = 3;\nconsole.log(array.length); // 3\nconsole.log(array); // [1,2,3]\n9) Replace all\nThe String.replace() function allows using String and Regex to replace strings, natively this function only replaces the first occurrence. But you can simulate a replaceAll() function by using the /g at the end of a Regex:\n\nvar string = \"john john\";\nconsole.log(string.replace(/hn/, \"ana\")); // \"joana john\"\nconsole.log(string.replace(/hn/g, \"ana\")); // \"joana joana\"\n10) Merging arrays\nIf you need to merge two arrays you can use the Array.concat() function:\n\nvar array1 = [1,2,3];\nvar array2 = [4,5,6];\nconsole.log(array1.concat(array2)); // [1,2,3,4,5,6];\nHowever, this function is not the most suitable to merge large arrays because it will consume a lot of memory by creating a new array. In this case, you can use Array.push.apply(arr1, arr2) which instead creates a new array – it will merge the second array in the first one reducing the memory usage:\n\nvar array1 = [1,2,3];\nvar array2 = [4,5,6];\nconsole.log(array1.push.apply(array1, array2)); // [1,2,3,4,5,6];\n11) Converting NodeList to Arrays\nIf you run the document.querySelectorAll(\"p\") function, it will probably return an array of DOM elements, the NodeList object. But this object doesn’t have all array’s functions, like: sort(), reduce(), map(), filter(). In order to enable these and many other native array’s functions you need to convert NodeList into Arrays. To run this technique just use this function: [].slice.call(elements):\n\nvar elements = document.querySelectorAll(\"p\"); // NodeList\nvar arrayElements = [].slice.call(elements); // Now the NodeList is an array\nvar arrayElements = Array.from(elements); // This is another way of converting NodeList to Array\n12) Shuffling array’s elements\nTo shuffle the array’s elements without using any external library like Lodash, just run this magic trick:\n\nvar list = [1,2,3];\nconsole.log(list.sort(function() { Math.random() - 0.5 })); // [2,1,3]\nConclusion\n\nNow you learned some useful JS hacks which are largely used to minify JavaScript code and some of these tricks are used in many popular JS frameworks like Lodash, Underscore.js, Strings.js, among others. If you want to go even deeper and learn more about how you can minify your code even more and even protect it from prying eyes talk to us. I hope you enjoyed this post and if you know other JS hacks, please leave your comment on this post!\n\nThis entry was posted in JavaScript, Tutorials and tagged hacks, javascript by Caio Ribeiro Pereira. Bookmark the permalink."}]},{"name":"IIFE","noteArray":[{"text":"(function () { \n    var aName = \"Barry\";\n})();\n// Variable name is not accessible from the outside scope\naName // throws \"Uncaught ReferenceError: aName is not defined\""},{"text":"let aName = 'David';\nlet dogName = 'Toby';\n\n(function (pet) { \n  var aName = \"Barry\";\n  console.log(aName);\n  console.log(pet);\n})(dogName);\n\n console.log(aName);"}]},{"name":"JSON","noteArray":[{"text":"Javascript Object Notation\n   \nLike java script, but you have to have quotes around the keys\n   \n{\n\"person\": {  \n     \"age\": \"21\",\n     \"name\": \"Travis\",\n     \"city\": \"Los Angeles\"\n     }\n}"}]},{"name":"Number Functions","noteArray":[{"text":"#. isNaN();     This checks if the value is not a number.\n   \n#. toFixed(3);     This returns a string with 3 decimal places.  -> 10.232\n   \n#. toPrecision(3); This returns a string with te total of 3 digits.   ->  10.2"}]},{"name":"Object construtor notation","noteArray":[{"text":"function Hotel(name, rooms, booked) {\n\tthis.name = name;\n\tthis.rooms = rooms;\n\tthis.booked = booked;\n\tthis.checkAvailability = function() {\n            return this.rooms - this.booked;\n    };\n}\n\nvar quayHotel = new Hotel(\"Quay\", 40, 25);\nvar parkHotel = new Hotel(\"Park\", 120, 77);"}]},{"name":"Object Creatation","noteArray":[{"text":"function Person(first, last, age, eyecolor) {\n    this.firstName = first;\n    this.lastName = last;\n    this.age = age;\n    this.eyeColor = eyecolor;\n    this.thisYear= \"2018\";\n\n};\n\nPerson.prototype.fullName= function(){\n    return this.firstName + \" \" + this.lastName;\n};\n\nvar myFather = new Person(\"Lou\", \"Berkheimer\", 50, \"brown\");\nvar myMother = new Person(\"Donna\", \"Geotz\", 48, \"green\");\n\nconsole.log(myFather.firstName);\nconsole.log(myMother.firstName);\nconsole.log(myFather.fullName());\nconsole.log(myMother.fullName());"},{"text":"Object.create();\n\n// Animal properties and method encapsulation\nvar Animal = {\n  type: 'Invertebrates', // Default value of properties\n  displayType: function() {  // Method which will display type of Animal\n    console.log(this.type);\n  }\n};\n\n// Create new animal type called animal1 \nvar animal1 = Object.create(Animal);\nanimal1.displayType(); // Output:Invertebrates\n\n// Create new animal type called Fishes\nvar fish = Object.create(Animal);\nfish.type = 'Fishes';\nfish.displayType(); // Output:Fishes"}]},{"name":"Object.create()","noteArray":[{"text":"var person = {\n  firstname: \"Default\",\n  lastname: \"Default\",\n  greet: function() {\n    return \"Hi \" + this.firstname;\n  }\n};\n\nvar john = Object.create(person);\njohn.firstname = \"John\";\njohn.lastname = \"Doe\";\nconsole.log(john);\n\nlet db = Object.create(console);\nconsole.log(db);\ndb.log(\"hello david\");"}]},{"name":"Paths","noteArray":[{"text":"./ => Means the same folder I'm sitting in now."},{"text":"../ => Means go back one folder."},{"text":"/ => Means look in the root folder"}]},{"name":"Random Number","noteArray":[{"text":"Math.random();     //Generates a number a number between 0 and 1, It does not include 1"},{"text":"Math.floor(); Chops of the decimal\n\nIf you want to generate a number between 1 and 6.\nLike a Dice Roll\nUSE:\nMath.floor(Math.random() * 6  + 1);"}]},{"name":"String to Number code","noteArray":[{"text":"var secretNumer = 4;\nvar guess = Number(prompt(\"Guess a number?\"));\n\n\nif(guess===secretNumer){\n\tconsole.log(\"You got it right.\");\n}else if(guess > secretNumer){\n\tconsole.log(\"too high. guess again.\");\n}else{\n\tconsole.log(\"Too low. Guess again.\")\n}"}]},{"name":"Ternary","noteArray":[{"text":"this.textContent===\"Easy\" ? numSquares = 3: numSquares = 6;\n\nThese are both the same\n\n    if(this.textContent===\"Easy\"){\n    \tnumSquares = 3;\n \n    }else{\n    \tnumSquares = 6;\n    }"},{"text":"bookMarkContainer.style.display = bookMarkContainer.style.display === \"flex\" ? \"none\" : \"flex\";"}]},{"name":"Throw","noteArray":[{"text":"throw 'User has no name';\n    throw new SyntaxError('User has no name');"}]},{"name":"Try/Catch/finally","noteArray":[{"text":"const user = {email: 'jdoe@gmail.com'};\n\ntry {\n  // Produce a ReferenceError\n  // myFunction();\n\n  // Produce a TypeError\n  // null.myFunction();\n\n  // Will produce SyntaxError\n  // eval('Hello World');\n\n  // Will produce a URIError\n  // decodeURIComponent('%');\n\n  if(!user.name) {\n    //throw 'User has no name';\n    throw new SyntaxError('User has no name');\n  }\n\n} catch(e) {\n  console.log(`User Error: ${e.message}`);\n  // console.log(e);\n  // console.log(e.message);\n  // console.log(e.name);\n  // console.log(e instanceof TypeError);\n} finally {\n  console.log('Finally runs reguardless of result...');\n}\n\nconsole.log('Program continues...');"}]},{"name":"typeof","noteArray":[{"text":"var a = 3;\nconsole.log(typeof a); //number\n\nvar b = \"Hello\";\nconsole.log(typeof b); //string\n\nvar c = {};\nconsole.log(typeof c); //object\n\nvar d = [];\nconsole.log(typeof d); //object // weird!\nconsole.log(Object.prototype.toString.call(d)); //[object Array] // better!\n\nfunction Person(name) {\n  this.name = name;\n}\n\nvar e = new Person(\"Jane\");\nconsole.log(typeof e); //object\nconsole.log(e instanceof Person); // true\n\nconsole.log(typeof undefined); //undefined // makes sense\nconsole.log(typeof null); //object // a bug since, like, forever...\n\nvar z = function() {};\nconsole.log(typeof z); //function"}]}]},{"name":"jQuery","subFolderArray":[{"name":"$(this)   KEYWORD","noteArray":[{"text":"$( \"button\" ).click(function() {\n$(this).css(\"background\", \"pink\");\n});"},{"text":"This selects all Buttons, but only turns the buttons one at a time pink when you click it."},{"text":"$( \"button\" ).click(function() {\n\tvar text = $(this).text();\n   console.log(\"You clicked \" + text);\n});"},{"text":"This prints the button text that you clicked on."}]},{"name":"Common jQuery Methods","noteArray":[{"text":"slide"},{"text":".text()\nGet the combined text contents of each element in the set of matched elements, \nincluding their descendants, or set the text contents of the matched elements."},{"text":".html()\nGet the HTML contents of the first element in the set of matched elements or\n set the HTML contents of every matched element."},{"text":".attr()\nGet the value of an attribute for the first element in the set of matched elements or\n set one or more attributes for every matched element."},{"text":"$(\"img\").attr(\"src\", \"images/2.jpg\");"},{"text":".val()\nGet the current value of the first element in the set of matched elements or\n set the value of every matched element."},{"text":".addClass()\nAdds the specified class(es) to each element in the set of matched elements."},{"text":"$( \"p\" ).addClass( \"myClass yourClass\" );"},{"text":".removeClass()\nRemove a single class, multiple classes,\n or all classes from each element in the set of matched elements."},{"text":"$( \"p\" ).removeClass( \"myClass yourClass\" )"},{"text":".toggleClass()\nAdd or remove one or more classes from each element in the set of matched elements,\n depending on either the class’s presence or the value of the state argument."},{"text":".last()\nReduce the set of matched elements to the final one in the set."},{"text":"$( \"li\" ).last().css( \"background-color\", \"red\" );"},{"text":".first()\nReduce the set of matched elements to the first in the set."},{"text":"$( \"li\" ).first().css( \"background-color\", \"red\" );"}]},{"name":"jQuery Book references","noteArray":[{"text":"One"},{"text":"Two"},{"text":"Three"},{"text":"Four"}]},{"name":"jQuery Events","noteArray":[{"text":"slide"}]},{"name":"Manipulating Style","noteArray":[{"text":"Slide 1"},{"text":"Slide 2"},{"text":"html\n\n    <h1>jQuery Demo</h1>\n\n    <div>Div 1</div>\n    <div class=\"highlight\">Div 2</div>\n    <div id=\"third\">Div 3</div>\n    <div class=\"highlight\">Div 4</div>"},{"text":"js\n\n//select all the divs and give them a purple background\n$(\"div\").css(\"background\", \"purple\");\n//select the divs with class highlight and make them 200px wide\n$(\".highlight\").css(\"width\", \"200px\");\n// second way\n//select all divs with the class of highlight\n$(\"div.highlight\").css(\"width\", \"200px\");\n//select the div with id third and give it a orange border\n$(\"#third\").css(\"border\", \" 3px solid orange\");\n//select the first div only and change its font color to pink\n$(\"div:first-of-type\").css(\"color\", \"pink\");"}]},{"name":"More jQuery Methods","noteArray":[{"text":"keypress() slide"},{"text":"The event is always passed in, but you can not use it unless you give it a name.\nThe name can be anything.\n\n$(\"input\").keypress(function(event){\n\tif (event.which === 13) {\n\t\talert(\"You pressed enter\");\n\t}\n});\n\nevent.which is the keycode and 13 represents the enter key."},{"text":"on() slide"},{"text":"on() slide 2"},{"text":"Example:\n$(\"h1\").on(\"click\", function(){\n$(this).css(\"color\", \"purple\");\n});"},{"text":"Example:\n$(\"input\").on(\"keypress\", function(){\n    console.log(\"Keypressed\");\n});"},{"text":"Example: Hover Effect\n$(\"button\").on(\"mouseenter\", function(){\n  $(this).css(\"font-weight\", \"bold\");\n});\n\n$(\"button\").on(\"mouseleave\", function(){\n  $(this).css(\"font-weight\", \"normal\");\n});"},{"text":"slide"},{"text":"************************************\nfadeOut();\n\nhtml\n<div>DAVID</div>\n<div>EARL</div>\n<div>BERRKHEIMER</div>\n<button>CLICK ME</button>\n\n.css\ndiv{\n\twidth: 100px;\n\theight: 100px;\n\tbackground: teal;\n\tfloat: left;\n\tmargin: 20px;\n\t/*display: none;*/\n}\n\n.js\n$(\"button\").on(\"click\", function(){\n$(\"div\").fadeOut(1000, function(){\nconsole.log(\"fade out complete\");//this will happen after fadeout()\n});\nconsole.log(\"button click\");//this will happen on click\n});"},{"text":"fadeIn();\n\nhtml\n<div>DAVID</div>\n<div>EARL</div>\n<div>BERRKHEIMER</div>\n<button>CLICK ME</button>\n\n.css\ndiv{\n\twidth: 100px;\n\theight: 100px;\n\tbackground: teal;\n\tfloat: left;\n\tmargin: 20px;\n\tdisplay: none;\n}\n\n.js\n$(\"button\").on(\"click\", function(){\n$(\"div\").fadeIn(1000, function(){\nconsole.log(\"fade out complete\");//this will happen after fadeIn()\n});\nconsole.log(\"button click\");//this will happen on click\n});"},{"text":"fadeToggle();\n\nhtml\n<div>DAVID</div>\n<div>EARL</div>\n<div>BERRKHEIMER</div>\n<button>CLICK ME</button>\n\n.css\ndiv{\n\twidth: 100px;\n\theight: 100px;\n\tbackground: teal;\n\tfloat: left;\n\tmargin: 20px;\n\tdisplay: none;\n}\n\n.js\n$(\"button\").on(\"click\", function(){\n$(\"div\").fadeToggle(1000, function(){\nconsole.log(\"fade out complete\");//this will happen after fadeIn()\n});\nconsole.log(\"button click\");//this will happen on click\n});"},{"text":"slideDown();\n\nhtml\n<div>DAVID</div>\n<div>EARL</div>\n<div>BERRKHEIMER</div>\n<button>CLICK ME</button>\n\n.css\ndiv{\n\twidth: 100px;\n\theight: 100px;\n\tbackground: teal;\n\tfloat: left;\n\tmargin: 20px;\n\tdisplay: none;\n}\n\n.js\n$(\"button\").on(\"click\", function(){\n$(\"div\").slideDown();\n});"},{"text":"slideDown();\n\nhtml\n<div>DAVID</div>\n<div>EARL</div>\n<div>BERRKHEIMER</div>\n<button>CLICK ME</button>\n\n.css\ndiv{\n\twidth: 100px;\n\theight: 100px;\n\tbackground: teal;\n\tfloat: left;\n\tmargin: 20px;\n\tdisplay: none;\n}\n\n.js\n$(\"button\").on(\"click\", function(){\n$(\"div\").slideDown();\n});"},{"text":"slideUp();\n\nhtml\n<div>DAVID</div>\n<div>EARL</div>\n<div>BERRKHEIMER</div>\n<button>CLICK ME</button>\n\n.css\ndiv{\n\twidth: 100px;\n\theight: 100px;\n\tbackground: teal;\n\tfloat: left;\n\tmargin: 20px;\n\t/*display: none;*/\n}\n\n.js\n$(\"button\").on(\"click\", function(){\n$(\"div\").slideUp();\n});"},{"text":"slideToggle();\n\nhtml\n<div>DAVID</div>\n<div>EARL</div>\n<div>BERRKHEIMER</div>\n<button>CLICK ME</button>\n\n.css\ndiv{\n\twidth: 100px;\n\theight: 100px;\n\tbackground: teal;\n\tfloat: left;\n\tmargin: 20px;\n\t/*display: none;*/\n}\n\n.js\n$(\"button\").on(\"click\", function(){\n$(\"div\").slideToggle();\n});"},{"text":"slideToggle(); with arugments\n\n$(\"button\").on(\"click\", function(){\n$(\"div\").slideToggle(1000, function(){\n\tconsole.log(\"slide is done\");\n});\n});"},{"text":"slideToggle();      remove the elements after click\n\n$(\"button\").on(\"click\", function(){\n$(\"div\").slideToggle(1000, function(){\n\t$(this).remove();\n});\n});"}]},{"name":"Preview","noteArray":[{"text":"slide"}]},{"name":"Selecting with jQuery","noteArray":[{"text":"slide 1"},{"text":"slide 2"},{"text":"When you use jQuery to select things, it gives you a array of items even if you have only one item."},{"text":"html\n\n    <h1>jQuery Demo</h1>\n\n    <div>Div 1</div>\n    <div class=\"highlight\">Div 2</div>\n    <div id=\"third\">Div 3</div>\n    <div class=\"highlight\">Div 4</div>"},{"text":"js\n\n//select all the divs and give them a purple background\n$(\"div\").css(\"background\", \"purple\");\n//select the divs with class highlight and make them 200px wide\n$(\".highlight\").css(\"width\", \"200px\");\n// second way\n//select all divs with the class of highlight\n$(\"div.highlight\").css(\"width\", \"200px\");\n//select the div with id third and give it a orange border\n$(\"#third\").css(\"border\", \" 3px solid orange\");\n//select the first div only and change its font color to pink\n$(\"div:first-of-type\").css(\"color\", \"pink\");"}]}]},{"name":"MailChimp","subFolderArray":[{"name":"API Key","noteArray":[{"text":"Sign in and go to account.\nGoto extras.\nGoto API Keys."}]}]},{"name":"MongoDB","subFolderArray":[{"name":"AAA","noteArray":[{"text":"To start mongo go to this path in command line interface. C:\\Program Files\\MongoDB\\Server\\4.0\\bin type: mongod\nOpen a new terminal , windows key and x, and  go to this path in the command line interface\n C:\\Program Files\\MongoDB\\Server\\4.0\\bin type: mongo  Too run shell commands.\nbash command line interface is set up to take mongod and mongo anywhere."},{"text":"David@DEBXWIN8LAPTOP MINGW64 ~/Desktop\n$ mongo\nMongoDB shell version v4.0.10\nconnecting to: mongodb://127.0.0.1:27017/?gssapiServiceName=mongodb\nImplicit session: session { \"id\" : UUID(\"dd1d254b-1ceb-40f9-a6be-119ca46cd041\") }\nMongoDB server version: 4.0.10\nshow dbs\nadmin   0.000GB\nconfig  0.000GB\nlocal   0.000GB\nshopDB  0.000GB\nuse shopDB\nswitched to db shopDB\nshow collections\nproducts\ndb.products.find()\n{ \"_id\" : 1, \"name\" : \"Pen\", \"price\" : 1.2, \"stock\" : 32 }\n{ \"_id\" : 3, \"name\" : \"Rubber\", \"price\" : 1.3, \"stock\" : 43, \"reviews\" : [ { \"authorName\" : \"Sally\", \"rating\" : 5, \"review\" : \"Best rubber ever\" }, \n{ \"authorName\" : \"John\", \"rating\" : 5, \"review\" : \"Awsome rubber\" } ] }"}]},{"name":"add to database","noteArray":[{"text":"db.products.insertOne({_id: 1, name: \"Pen\", price: 1.20})"}]},{"name":"Atlas APP","noteArray":[{"text":"connect App type: Replace todolistDB =>\nmongoose.connect(\n  \"mongodb+srv://David:Subway1248@debxdebx-mlc71.mongodb.net/todolistDB\",\n  {\n    useNewUrlParser: true,\n    useUnifiedTopology: true\n  }\n);"}]},{"name":"Atlas shell","noteArray":[{"text":"connect to shell type:\nmongo \"mongodb+srv://debxdebx-mlc71.mongodb.net/test\" --username David --password Subway1248"}]},{"name":"Create a new database","noteArray":[{"text":"type use newDB in the mongo shell at any time to create a new database named newDB."}]},{"name":"create command","noteArray":[{"text":"// New and save all at once \"create\"\nCat.create({\n   name: \"Snow WHite\",\n   age: 15,\n   temperament: \"Bland\"\n}, function(err, cat){\n   if(err){\n      console.log(err);\n   }else{\n      console.log(cat)\n   }\n});"}]},{"name":"CRUD","noteArray":[{"text":"Create  =>READ => Update +> Destroy"}]},{"name":"CRUD in the shell","noteArray":[{"text":"Add a new field to an existing product\ndb.products.updateOne({_id: 1}, {$set: {stock: 32}})\n{ \"acknowledged\" : true, \"matchedCount\" : 1, \"modifiedCount\" : 1 }"},{"text":"Remove a item with it's _id\ndb.products.deleteOne({_id: 2})\n{ \"acknowledged\" : true, \"deletedCount\" : 1 }"},{"text":"Adding an array of reviews\ndb.products.insertOne(\n{\n_id: 2,\nname: \"Pencil\",\nprice: 1.35,\nstock: 55,\nreviews: [\n{\nauthorName: \"David\",\nrating: 5,\nreview: \"Great Pencil\"\n},\n{\nauthorName: \"Donna\",\nrating: 4,\nreview: \"It's allright\"\n}\n]\n}\n)"}]},{"name":"delete everything in DB","noteArray":[{"text":"Drop everything =>\ndb.dropDatabase()\nDrop collection =>\ndb.campgrounds.drop()"},{"text":"mongo\nshow dbs\nuse yelp_camp    OR THE DB PROJECT YOU WANT TO DELETE\nshow collections\nThe name of the DB will come up \"campgrounds\"\ndb.campgrounds.drop()"},{"text":"$ mongo\nMongoDB shell version v4.0.10\nconnecting to: mongodb://127.0.0.1:27017/?gssapiServiceName=mongodb\nImplicit session: session { \"id\" : UUID(\"b2c106e4-a88d-4804-b7f7-19353eb75290\") }\nMongoDB server version: 4.0.10\nshow dbs\nadmin     0.000GB\nconfig    0.000GB\nfruitsDB  0.000GB\nlocal     0.000GB\nshopDB    0.000GB\nuse fruitsDB\nswitched to db fruitsDB\ndb.dropDatabase()\n{ \"dropped\" : \"fruitsDB\", \"ok\" : 1 }"}]},{"name":"Driver","noteArray":[{"text":"Make a new project with npm init\nGo to your project folder and type: npm install mongodb\nThis will install the driver.\nYou Don't have to install the driver if you are using mongoose."}]},{"name":"find command","noteArray":[{"text":"type the following in to find the dogs collection in current database\ndb.dogs.find()"},{"text":"type the following in to find the dogs collection in current database\ndb.dogs.find()"},{"text":"db.collection.find() in the command line will find everything in the collection. You can enter pararmeters.\ndb.books.find().pretty() in the command line will print in a pretty format."},{"text":"db.products.find({name: 'Pencil'})\n{ \"_id\" : 2, \"name\" : \"Pencil\", \"price\" : 0.8 }"},{"text":"Find all items with a price greater than 1 dollar\ndb.products.find({price: {$gt: 1}})\n{ \"_id\" : 1, \"name\" : \"Pen\", \"price\" : 1.2 }"},{"text":"This only returns the name and _id\ndb.products.find({_id: 1}, {name: 1})\n{ \"_id\" : 1, \"name\" : \"Pen\" }"},{"text":"This only returns the name , _id is set to false, 1 = true and zero is false\ndb.products.find({_id: 1}, {name: 1, _id: 0})\n{ \"name\" : \"Pen\" }"}]},{"name":"find()","noteArray":[{"text":"db.collection.find()\ndb.collection.find({name: \"Pencil\"})\n\nfind where the price is greater than One Dollar =>\ndb.collection.find({price: {$gt: 1}})\n\ntell it which fields you want back, the one is for true, 0 is false.\ndb.collection.find({_id: 1}, {name: 1})\n**************************************\ndb.products.find()\ndb.products.find({name: \"Pencil\"})\ndb.products.find({price: {$gt: 1}})\ndb.products.find({_id: 1}, {name: 1})"}]},{"name":"help command","noteArray":[{"text":"type help in the mongo shell at any time to see a list of commands."}]},{"name":"insert command","noteArray":[{"text":"type the following to insert an object\ndb.dogs.insert({name: \"Rusty\", bread: \"mutt\"})"}]},{"name":"install mongoose","noteArray":[{"text":"cd into the project folder =>\nnpm install mongoose"}]},{"name":"mongod","noteArray":[{"text":"mongod starts the database server in the command line.\nIf you want to go to the shell open up a new terminal and type mongo. Now you can enter commands in the shell."}]},{"name":"Open mongo shell","noteArray":[{"text":"type the following in a new terminal\nmongo and press return"},{"text":"You will use the shell to debug."},{"text":"To see the databases type the following\n => show dbs"},{"text":"To use a specfic databases type the following\n => use dbName"},{"text":"To see collections type the following\n => show collections"},{"text":"To see whats in the collections type the following\n => db.cats.find()"}]},{"name":"pretty()","noteArray":[{"text":"db.books.find().pretty() in the command line will print in a pretty format."}]},{"name":"remove command","noteArray":[{"text":"The following delete breads that our labs\ndb.dogs.remove({bread: \"lab\"})"}]},{"name":"save command","noteArray":[{"text":"Make a object => myObj\nmyObj.save();"},{"text":"And a callback function when saving=>\nmyObj.save(function(err, catDB){\nif (err){\nconsole.log(\"SOMETHING WENT WRONG\");\n} else{\n    console.log(\"WE JUST SAVED A CAT TO THE DB:\");\n    console.log(cat);\n}\n}):"}]},{"name":"show collections command","noteArray":[{"text":"type show collections in the command line to see all collections in the current DB"}]},{"name":"show dbs command","noteArray":[{"text":"type show dbs in the mongo shell at any time to see a list of your databases."}]},{"name":"start mongo","noteArray":[{"text":"You need to turn your database back on => You must be n the root directory\nwhen you ls you should see\ndata/ lib/ monogod* workspace\nType the following to start mongo\n./mongod"}]},{"name":"stop mongo","noteArray":[{"text":"press control + c"}]},{"name":"update command","noteArray":[{"text":"The following selects Bandit and updates its bread value\ndb.dogs.update({name: \"Bandit\"}, {bread: \"lab\"})\nBut it also deletes his name"},{"text":"The following selects Rusty and updates its values\ndb.dogs.update({name: \"Rusty\"}, {$set: {name: \"Tater\", isCute: true}})\nBut it keeps his other info like bread"}]},{"name":"use command","noteArray":[{"text":"To make a new data base or use a data base type the following\nuse demo and press return"},{"text":"type use newDB in the mongo shell at any time to create a new database named newDB or to use an existing database."}]},{"name":"Which db are you working with","noteArray":[{"text":"type db  in the command line to see which database you are currently working with."}]}]},{"name":"mongoose","subFolderArray":[{"name":"create","noteArray":[{"text":"const fruit = new Fruit({\n  name: \"peach\",\n  rating: 4,\n  review: \"Pretty solid fruit\"\n});\n\n// save the fruit in the data base fruitsDB, in the collection fruits\n fruit.save();"}]},{"name":"deleteOne()","noteArray":[{"text":"Fruit.deleteOne({ _id: \"5e34b530fa056609c87e1ac3\" }, function(err) {\n  if (err) {\n    console.log(err);\n  } else {\n    console.log(\"record deleted\");\n  }\n});"}]},{"name":"find()","noteArray":[{"text":"Post.find({}, function(err, foundItems) {\n    if (err) {\n      console.log(`There was an error: ${err}`);\n    } else {\n      res.render(\"home\", {\n        startingContent: homeStartingContent,\n        posts: foundItems\n      });\n    }\n  });"}]},{"name":"findOne()","noteArray":[{"text":"Post.findOne({ _id: requestedPostId }, function(err, post) {\n    if (err) {\n      console.log(`There was an error: ${err}`);\n    } else {\n      res.render(\"post\", {\n        title: post.title,\n        content: post.content\n      });\n    }\n  });"}]},{"name":"insertMany()","noteArray":[{"text":"Fruit.insertMany([kiwi, orange, banana], function(err) {\n  if (err) {\n    console.log(err);\n  } else {\n    console.log(\"Successfully saved all the fruits to fruits db\");\n  }\n});"}]},{"name":"Model","noteArray":[{"text":"// make a fruits collection { mongo adds an S to Fruit and drops the capital F}\nconst Fruit = mongoose.model(\"Fruit\", fruitSchema);"}]},{"name":"mongoose.connect()","noteArray":[{"text":"mongoose.connect(\n  \"mongodb+srv://David:Subway1248@debxdebx-mlc71.mongodb.net/blogDB\",\n  {\n    useNewUrlParser: true,\n    useUnifiedTopology: true\n  }\n);"},{"text":"// connect to data base fruitsDB or create it\nmongoose.connect(\"mongodb://localhost:27017/fruitsDB\", {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n});"}]},{"name":"replaceOne()","noteArray":[{"text":"Article.replaceOne(\n      { title: req.params.articleTitle },\n      { title: req.body.title, content: req.body.content },\n      { overwrite: true },\n      (err, results) => {\n        if (!err) {\n          res.send(\"Successfully updated article\");\n        } else {\n          console.log(`Error: ${err}`);\n          res.send(err);\n        }\n      }\n    );"}]},{"name":"save()","noteArray":[{"text":"post.save(function(err) {\n    if (!err) {\n      res.redirect(\"/\");\n    }\n  });"}]},{"name":"Schema","noteArray":[{"text":"const fruitSchema = new mongoose.Schema({\n  name: {\n    type: String,\n    required: [true, \"PLease check your data entry, no name specified\"]\n  },\n  rating: {\n    type: Number,\n    min: 1,\n    max: 10\n  },\n  review: String\n});"},{"text":"const personSchema = new mongoose.Schema({\n  name: String,\n  age: Number,\n  favoriteFruit: fruitSchema\n});\nconst Person = mongoose.model(\"person\", personSchema);"}]},{"name":"updateOne()","noteArray":[{"text":"Fruit.updateOne(\n  { _id: \"5e34a9f391da2c0418d3f89d\" },\n  { name: \"Green Apple\" },\n  function(err) {\n    if (err) {\n      console.log(err);\n    } else {\n      console.log(\"Successfully updated the doc\");\n    }\n  }\n);"},{"text":"Article.updateOne(\n      { title: req.params.articleTitle },\n      { $set: req.body },\n      err => {\n        if (!err) {\n          res.send(\"Successfully updated article.\");\n        } else {\n          res.send(err);\n        }\n      }\n    );"}]}]},{"name":"Node ENVIRONMENT VARIABLES","subFolderArray":[{"name":".env","noteArray":[{"text":"SECRET=Thisisoutlittlesecret.\nAPI_KEY=Davidisgreat"}]},{"name":".gitignore","noteArray":[{"text":"node_modules/*\n.env"}]},{"name":"app.js","noteArray":[{"text":"require(\"dotenv\").config();\nconst express = require(\"express\");\nconst bodyParser = require(\"body-parser\");\nconst ejs = require(\"ejs\");\nconst mongoose = require(\"mongoose\");\nconst encrypt = require(\"mongoose-encryption\");\nconst app = express();"}]},{"name":"npm","noteArray":[{"text":"npm install dotenv"}]}]},{"name":"node JS","subFolderArray":[{"name":"Command Line Interface","noteArray":[{"text":"dir => List all files and folders"},{"text":"dir on window's and ls on Mac"},{"text":"cd folderName => Change directory"},{"text":"cd .. => Change directory, Go back one folder"},{"text":"mkdir test => Make directory, Creates a folder with the name test"},{"text":"You can download Windows PowerShell. It's like a Mac interface."},{"text":"cls => Clear's the screen"},{"text":"node -v => v10.14.0"},{"text":"node => Press enter and you can run javascript in the command line."},{"text":"Press Control c Twice to quit node in the command line."},{"text":"C:\\>D:  => This switches to D: Drive"},{"text":"C:\\Users\\David\\Desktop\\NODJS => My path to my Desktop Folder"},{"text":"C:\\Users\\David\\Desktop\\NODJS node app.js => This will run the app.js File in the folder."},{"text":"Press tab to auto complete your folder name."},{"text":"Press up arrow to bring up last couple commands."},{"text":"open second command prompt\nwindows key + x    choose command prompt"},{"text":"TO add a title to the window type:   => title Node JS"},{"text":"To Open a folder in command promt from file explorer, click in the path address and type => cmd"},{"text":"To Open a folder in command promt from file explorer: Hold down shift and right click the folder\n and select open command window here."},{"text":"open second command prompt type => start"},{"text":"cd ~\nThis will take you to your root directory"}]},{"name":"Debug","noteArray":[{"text":"run in terminal =>\nnode --inspect-brk app.js\n\nIn chrome type in address bar =>\nchrome://inspect\n\nThen click on inspect. Inspect will show up under Target.\nThen start stepping throught your code in Sources."}]},{"name":"Module's","noteArray":[{"text":"require('./greet.js');\n./ => Means the same folder I'm sitting in now."},{"text":"simple module =>\n\ngreet.js file =>\nlet greet = function(){\n  console.log('Hello David E Berkheimer');\n};\nmodule.exports = greet;\n\napp.js file =>\nlet greet = require('./greet');\ngreet();"},{"text":"Export Module Object =>\napp.js and a folder greet with index.js, english.js and spanish.js\n\napp.js =>\n//Since there is no greet.js it will look for a folder greet \n//and then look for index.js\nlet greet = require('./greet');\n\ngreet.english();\ngreet.spanish();\n\nindex.js =>\nlet english = require('./english');\nlet spanish = require('./spanish')\n//export an Object\nmodule.exports = {\n  //Name Value Pairs\n  english: english,\n  spanish: spanish\n}\n\nengilish.js =>\nlet greet = function(){\n  console.log('Hello')\n }\n module.exports = greet;\n\nspanish.js =>\nlet greet = function(){\n console.log('Hola')\n}\nmodule.exports = greet;\n\nOutput =>\nHello\nHola"},{"text":"Export Module Object and Load JSON File=>\napp.js and a folder greet with index.js, english.js, spanish.js and greetings.json\n\napp.js =>\n//Since there is no greet.js it will look for a folder greet \n//and then look for index.js\nlet greet = require('./greet');\n\ngreet.english();\ngreet.spanish();\n\nindex.js =>\nlet english = require('./english');\nlet spanish = require('./spanish')\n//export an Object\nmodule.exports = {\n  //Name Value Pairs\n  english: english,\n  spanish: spanish\n}\n\nengilish.js =>\nlet greetings = require('./greetings.json');\n\nlet greet = function(){\n  console.log(greetings.en);\n }\n module.exports = greet;\n\nspanish.js =>\nlet greetings = require('./greetings.json');\n\nlet greet = function(){\n console.log(greetings.es);\n}\nmodule.exports = greet;\n\ngreetings.json =>\n{\n  \"en\": \"Hello\",\n  \"es\": \"Hola\"\n}\n\nOutput =>\nHello\nHola"}]},{"name":"nodemon","noteArray":[{"text":"nodemon app.js"},{"text":"type: rs\nany ime in the terminal to force nodemon to restart."},{"text":"watch certan extentions\nnodemon app.js -e js,hbs"}]},{"name":"NPM","noteArray":[{"text":"npm init\n\nGo to the folder were you our going to write your app.js in the command line interface.\ntype => npm init\nEnter your start up settings that it ask's you for.\nMake sure your entry point is app.js, this is the first script to run.\nNPM then creates your JSON file for your project. package.json\n\nscripts in the json file are command line commands\nYou can type npm test in the command line and it will run that script."},{"text":"Installing packages \"moment is just one of many packages you can install\"\n\ntype npm install moment -- save\nnpm will then download the package for moment and install the module\n-- save will save a reference of moment in the package.json file\nA new folder is created in your app folder. node_modules\nIf you look in your package.json, you will see a new entry under dependencies, \nthe moment key and its version.\nthe ^ in the version means, automatically update me, if its a minor change or patch change, \nbut not if there is a major change.\nthe~ means only update patches"},{"text":"If you receive a project from someone else. you will not receive the node_modules folder,\nbut since you have the package.json file it knows the files your code depends on.\nAll you have to do in the command line is type => npm install\nWhen you type this it will look at the package.json and install all dependence's"},{"text":"When you require a package in your app.js\n\nlet moment = require('moment'); This looks in the node core first and then in node_modules folder\nlet moment = require('./moment'); This means look same folder for local module."},{"text":"Installing packages as a develpment dependence, only other coders need this,\njasmine-node package.\n\ntype npm install jasmine-node --save-dev"},{"text":"When you upload your code to a server, You will not send the node_module folder.\nThe server will install all the dependencies."},{"text":"Install nodmon globally\ntype npm install -g nodemon"},{"text":"npm update\nThis will look at all dependencies and update then if need be."},{"text":"nodemon app.js\n\nnode monitor, watches the files in your folder, if they change nodemon cancel's node and \nruns that node command again.\nJust like typing node app.js again."},{"text":"starter packages\nnpm install body-parser --save\nnpm install ejs --save\nnpm install express --save\nnpm install mongoose --save"},{"text":"# GET VERSION\nnpm -v (or --version)\n\n# GET HELP\nnpm help\nnpm\n\n# CREATE PACKAGE.JSON\nnpm init\nnpm init -y (or --yes)\n\n# SET DEFAULTS\nnpm config set init-author-name \"YOUR NAME\"\nnpm set init-license \"MIT\"\n\n# GET DEFAULTS\nnpm config get init-author-name\nnpm get init-license\n\n# REMOVE DEFAULTS\nnpm config delete init-author-name\nnpm delete init-license\n\n# INSTALLING LOCAL PACKAGES\nnpm install lodash --save (or npm install --save lodash)\nnpm install moment --save\nnpm install gulp gulp-sass --save-dev\n\n# MOVE TO ANOTHER FOLDER\nnpm install\nnpm install --production\n\n# REMOVING MODULES\nnpm uninstall gulp-sass --save-dev\nnpm remove gulp --save-dev\n\n#INSTALL CERTAIN VERSIONS\nnpm install lodash@4.17.3 --save\n\n# UPDATE\nnpm update lodash --save\n\n# INSTALL GLOBAL MODULE\nnpm install -g nodemon\nnpm install -g live-server\n\n# RUN NODEMON\nnodemon\n\n# FIND ROOT FOLDER\nnpm root -g\n\n# REMOVE GLOBAL PACKAGES\nnpm remove -g nodemon\n\n# LISTING PACKAGES\nnpm list\nnpm list --depth 0\nnpm list --depth 1\n\n# INSTALL LIVE-SERVER LOCALLY\nnpm install live-server --save-dev\n\n# NPM SCRIPT\n\"scripts\": {\n    \"start\": \"node index.js\",\n    \"dev\": \"live-server\"\n  },"}]},{"name":"npm commands","noteArray":[{"text":"How can I check to see which packages are out of date?\nnpm outdated\nD:\\WebDevelopment\\GitHub\\MomsMoney>npm outdated\nPackage   Current  Wanted  Latest  Location\nelectron    6.0.9  6.0.10  6.0.10  momsmoney"}]},{"name":"NPM golbal install","noteArray":[{"text":"npm install -g nodemon\nThis will install nodemon globally, so you can use it anywhere."}]},{"name":"NPM uninstall","noteArray":[{"text":"npm uninstall sax\n\nnpm uninstall takes 3 exclusive, optional flags which save or update the package version in your main package.json:\n\n-S, --save: Package will be removed from your dependencies.\n\n-D, --save-dev: Package will be removed from your devDependencies.\n\n-O, --save-optional: Package will be removed from your optionalDependencies.\n\n--no-save: Package will not be removed from your package.json file.\n\nExamples:\n\nnpm uninstall sax --save\nnpm uninstall @myorg/privatepackage --save\nnpm uninstall node-tap --save-dev\nnpm uninstall dtrace-provider --save-optional\nnpm uninstall lodash --no-save"}]},{"name":"npm update","noteArray":[{"text":"npm update\nThis will update your packages."}]},{"name":"NPM version","noteArray":[{"text":"The numbers are Major, minor, and bug/patch fixes ^4.2.7"},{"text":"^2.10.6 The carrot means update if a minor change or bug/patch fixes, but not majar changes."},{"text":"~2.10.6 The tiday means only update if it is a patche/bug fix."}]},{"name":"Path's","noteArray":[{"text":"./ => Means the same folder I'm sitting in now.\n   \n../ => Means go back one folder."}]},{"name":"process","noteArray":[{"text":"process.argv.forEach((item) => {\n  if (item === \"--load\") {\n    loadData();\n  }\n});"}]},{"name":"read and write files","noteArray":[{"text":"let fs = require(\"fs\");\nlet app = require(\"electron\").remote;\nlet dialog = app.dialog;"},{"text":"Or\nconst { app, BrowserWindow, Menu, ipcMain, dialog } = electron;\nlet fs = require(\"fs\");"},{"text":"function writeObjectTEST() {\n  dialog.showSaveDialog(fileName => {\n    if (fileName === undefined) {\n      alert(\"You didn't save the file\");\n      return;\n    }\n    let content = {\n      name: \"David Berkheimer\",\n      dob: \"November 29 1972\",\n      car: \"Kia Spectra 2003\"\n    };\n\n    content = JSON.stringify(content);\n\n    fs.writeFile(fileName, content, err => {\n      if (err) {\n        console.log(err);\n      } else {\n        alert(\"The file has been successfully saved.\");\n      }\n    });\n  });\n}"},{"text":"function readFileObjectTEST() {\n  dialog.showOpenDialog(fileNames => {\n    if (fileNames === undefined) {\n      alert(\"No file selected\");\n    } else {\n      readFileContents(fileNames[0]);\n    }\n  });\n}\n\nfunction readFileContents(filepath) {\n  fs.readFile(filepath, \"utf-8\", (err, data) => {\n    if (err) {\n      alert(\"An error occured reading the file.\");\n      return;\n    } else {\n      data = JSON.parse(data);\n      textArea.value = `Name: ${data.name} DOB: ${data.dob} Car: ${data.car}`;\n    }\n  });\n}"}]},{"name":"Restful Routes","noteArray":[{"imagePath":"C:\\Users\\David\\Documents\\ElectronFileCabinet\\photos\\restfulRoutes.png","text":"Restful Routes Chart"}]},{"name":"Tip's","noteArray":[{"text":"./ => Means the same folder I'm sitting in now."},{"text":"rs in the command line will restart your nodmon server, for when you change your app.js file."}]},{"name":"update Node.js","noteArray":[{"text":"install nvm from git hub.\ncurl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.2/install.sh | bash\n\nType in command line: 12.16.1 is the latest version\nnvm install 12.16.1"}]},{"name":"Visual Studio Code","noteArray":[{"text":"Set enter point for app.js\n   1: click debug icon.\n   2: click play button start.\n   3: This creates a settings file for launching the the app in node.js\n   4: Go back to files icon and a .settings folder is created.\n   5: Go back to debug and click play and the app runs."}]}]},{"name":"React","subFolderArray":[{"name":"components folder","noteArray":[{"text":"don't manage state, dumb components or functional components."},{"text":"Always make functional compontents with a Capital first letter even if the instuctor uses a lower case."}]},{"name":"containers folder","noteArray":[{"text":"Stateful components, class based."}]},{"name":"Create App","noteArray":[{"text":"Create React App\nGo to terminal =>\ncreate-react-app my-app\nUse cabob case in the name it's standard for react Apps\ncd my-app\nnpm start"},{"text":"delete logo.svg\nremove logo import statement from App.js\nremove styles in App.css"}]},{"name":"CSS Modules","noteArray":[{"text":"npm run eject\n\nlook in files: in config folder =>\nline 160\nwebpack.config.dev.js\nline 169\nwebpack.config.prod.js\n\nlook for:\n  {\n            test: /\\.css$/,\n            use: [\n              require.resolve('style-loader'),\n              {\n                loader: require.resolve('css-loader'),\n                options: {\n                  importLoaders: 1,\n                },\n\nChange options to=>\n          test: /\\.css$/,\n            use: [\n              require.resolve('style-loader'),\n              {\n                loader: require.resolve('css-loader'),\n                options: {\n                  importLoaders: 1,\n                  modules: true,\n                  localIdentName: '[name]__[local]__[hash:base64:5]'\n                },\nadd these two options to the webpack.config.prod.js file\n               modules: true,\n                  localIdentName: '[name]__[local]__[hash:base64:5]'\nShould look like this =>\n            test: /\\.css$/,\n            loader: ExtractTextPlugin.extract(\n              Object.assign(\n                {\n                  fallback: {\n                    loader: require.resolve('style-loader'),\n                    options: {\n                      hmr: false,\n                    },\n                  },\n                  use: [\n                    {\n                      loader: require.resolve('css-loader'),\n                      options: {\n                        importLoaders: 1,\n                        minimize: true,\n                        sourceMap: shouldUseSourceMap,\n                        modules: true,\n                        localIdentName: '[name]__[local]__[hash:base64:5]'\n                      },"}]},{"name":"CSS Modules ALT","noteArray":[{"text":"import classes from \"../Persons.module.css\";\n\n   <div className={classes.Person}>\n\n</div>\nPersons.module.css File below\n.Person {\n  width: 60%;\n  margin: 16px auto;\n  border: 1px solid #eee;\n  box-shadow: 0 2px 3px #ccc;\n  padding: 16px;\n  text-align: center;\n}\n\n@media (min-width: 500px) {\n  .Person {\n    width: 450px;\n  }\n}"}]},{"name":"example","noteArray":[{"text":"index.js\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"},{"text":"App.jsx\n\nimport React from \"react\";\nimport Heading from \"./Heading\";\n\nfunction App() {\n  return <Heading />;\n}\nexport default App;"},{"text":"Heading.jsx\n\nimport React from \"react\";\n\n\n\nfunction Heading() {\n\n  const date = new Date();\n  const currentTime = date.getHours();\n  \n  let greeting;\n  \n  const customStyle = {\n    color: \"\"\n  };\n  \n  if (currentTime < 12) {\n    greeting = \"Good Morning\";\n    customStyle.color = \"red\";\n  } else if (currentTime < 18) {\n    greeting = \"Good Afternoon\";\n    customStyle.color = \"green\";\n  } else {\n    greeting = \"Good Night\";\n    customStyle.color = \"blue\";\n  }\n\n  return (\n    <h1 className=\"heading\" style={customStyle}>\n      {greeting}\n    </h1>\n  );\n}\nexport default Heading;"}]},{"name":"hoc folder","noteArray":[{"text":"higher order component."},{"text":"Aux is a special keyword in windows, if the instructor uses it use Auxilary instead."}]},{"name":"performance","noteArray":[{"text":"React Developer Tools\n\nTo view performance metrics for your react app:\n\nAppend ?react_perf to your local server URL (e.g. localhost:3000/?react_perf) and visit that URL in a browser"}]},{"name":"snippets","noteArray":[{"text":"rcc Class Component"}]},{"name":"Ternary Operator","noteArray":[{"text":"{currentTime >= 12 && <h1>Good Evening</h1>  }\nOR\n{currentTime >= 12 ? <h1>Good Evening</h1> : null }"}]},{"name":"Use arrow funcions","noteArray":[{"text":"purchaseHandler = () => {\n    this.setState({ purchasing: true });\n  };"},{"text":"render can be a normal function\n  render() {\n    const disabledInfo = {\n      ...this.state.ingredients\n    };\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n    // {salad; true, meat: false, ...}\n    return (\n      <Auxilary>\n        <Modal show={this.state.purchasing}>\n          <OrderSummary ingredients={this.state.ingredients} />\n        </Modal>\n        <Burger ingredients={this.state.ingredients} />\n        <BuildControls\n          ingredientAdded={this.addIngredientHandler}\n          ingredientRemoved={this.removeIngredientHandler}\n          disabled={disabledInfo}\n          purchasable={this.state.purchasable}\n          ordered={this.purchaseHandler}\n          price={this.state.totalPrice}\n        />\n      </Auxilary>\n    );\n  }"}]},{"name":"useEffect()","noteArray":[{"text":"Make sure the function name has a Capital letter for the first letter, and the export default has a capital letter or you will get error's."}]}]},{"name":"Terminal","subFolderArray":[{"name":"Command Promt","noteArray":[{"text":"Open files, cmd prompt\nstart code aaa.txt || aaa.txt"},{"text":"Windows command prompt:::::Below=>       Press F7 for a list of Prev Commands.\ndir => List all files and folders\ncls => Clear's the screen\nD:  => This switches to D: Drive\nopen second command prompt\nwindows key + x    choose command prompt\nTO add a title to the window type:   => title Node JS\nTo Open a folder in command promt from file explorer, click in the path address and type => cmd\nTo Open a folder in command promt from file explorer: Hold down shift and right click the folder\n and select open command window here.\nopen second command prompt type => start\ntree | clip =>tree view is copied to clipboard, use clip with any command.\nYou can download Windows PowerShell. It's like a Mac interface"}]},{"name":"Git Bash","noteArray":[{"text":"Open files, Git Bash \ncode aaa.txt || notepad aaa.txt\ncat aaa.tx  => open in termin`"},{"text":"start (opens command promt)\nstart . (opens file explorer)\nstart test.txt (Opens file in default program)"},{"text":"In order to navigate to a different drive just use\ncd /D"},{"text":"Git Bash\nnpm init\nnpm install express --save\nnpm -v (or --version)\nhelp\nsysteminfo\nshutdown\nclear\nls -l  || ls -a || ls -al\ntouch file.js\npwd\nrm test.js\nrm -rf folderName\ncd folderName => Change directory\ncd .. => Change directory, Go back one folder\nmkdir test => Make directory, Creates a folder with the name test\nnode -v => v10.14.0\nnode => Press enter and you can run javascript in the command line.\nPress Control c Twice to quit node in the command line.\nC:\\Users\\David\\Desktop\\NODJS => My path to my Desktop Folder\nC:\\Users\\David\\Desktop\\NODJS node app.js => This will run the app.js File in the folder.\nPress tab to auto complete your folder name.\nPress up arrow to bring up last couple commands."}]},{"name":"Help","noteArray":[{"text":"type: git help"},{"text":"type: git add -h"},{"text":"type: git help add"}]},{"name":"Nano","noteArray":[{"text":"Type: nano in git bash terminal to open text editor.\nType nano test.txt to open a file in text editor.\nThe up chevron means press the control key and then the letter."}]}]},{"name":"UnSplash Photos","subFolderArray":[{"name":"Getting mage URL","noteArray":[{"text":"Right click picture and select open image in new tab.\nCopy and paste the address from the new tab.\n\nOPEN IMAGE NOT OPEN LINK"}]}]},{"name":"VIM","subFolderArray":[{"name":"Basic motions","noteArray":[{"text":"Basic motions\nwhile in command mode.\nWe start with use of the home row. Typists are trained to keep their right hand on the j, k, l, and \";\" keys, and this is the starting point for using vim as well.\n\nj: move down one line\nk: move up one line\nh: move left one character\nl: move right one character"}]},{"name":"commands","noteArray":[{"text":"vim file.js  : open your file in vim\n:w     : write your changes to the file\n:q!     : get out of vim (quit), but without saving your changes (!)\n:wq    : write your changes and exit vim"}]},{"name":"delete text","noteArray":[{"text":"deleting text\nNow that we know how to change text, let's see how to do straight deletes. As you're probably getting now, it's very similar—just a different action to start things off.\n\nBasic deletion options\nx: exterminate (delete) the character under the cursor\nX: exterminate (delete) the character before the cursor\ndm: delete whatever you define as a movement, e.g. a word, or a sentence, or a paragraph.\ndd: delete the current line\ndt.: delete delete from where you are to the period\nD: delete to the end of the line\nJ: join the current line with the next one (delete what's between)"}]},{"name":"insert mode","noteArray":[{"text":"press i\npress esc to go back and enter a command.\ncommands start with a :"}]},{"name":"insert options","noteArray":[{"text":"Basic change/insert options\nLet's start with the options here.\n\ni: insert before the cursor\na: append after the cursor\nI: insert at the beginning of the line\nA: append at the end of the line\no: open a new line below the current one\nO: open a new line above the current one\nr: replace the one character under your cursor\nR: replace the character under your cursor, but just keep typing afterwards\ncm: change whatever you define as a movement, e.g. a word, or a sentence, or a paragraph.\nC: change the current line from where you're at\nct?: change change up to the question mark\ns: substitute from where you are to the next command (noun)\nS: substitute the entire current line"}]},{"name":"numbered lines","noteArray":[{"text":":set number"}]},{"name":"undo redo","noteArray":[{"text":"undo and redo\nYou can't have a text editor without undo and redo. As you've probably noticed, vim does its best to make the keys for the actions feel intuitive, and undo and redo are not exceptions.\n\nu: undo your last action.\nCtrl-r: redo the last action"}]}]},{"name":"VS CODE","subFolderArray":[{"name":"Debug Node","noteArray":[{"text":"create a launch.json file. select an environment: nodeJS.\nset request in launch.json to \"attach\"\nand name to \"Attach to port 3000\"\n\n{\n  // Use IntelliSense to learn about possible attributes.\n  // Hover to view descriptions of existing attributes.\n  // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387\n  \"version\": \"0.2.0\",\n  \"configurations\": [\n    {\n      \"type\": \"node\",\n      \"request\": \"attach\",\n      \"name\": \"attach to port 3000\",\n      \"skipFiles\": [\"<node_internals>/**\"],\n      \"program\": \"${workspaceFolder}\\\\app.js\"\n    }\n  ]\n}\n**********************************************************************************\nYOU HAVE TO RUN THE app.js In the command line => node --inspect app.js\n**********************************************************************************\nclick run start debuging;"}]},{"name":"Debug React","noteArray":[{"text":"create a launch.json file. select an environment: chrome.\nSet the URL in launch.json to =>\n  \"url\": \"http://localhost:3000\"\nSet the webRoot in launch.json to =>\n\"webRoot\": \"${workspaceFolder}/src\"\nclick run start debuging;\n\n\n{\n  // Use IntelliSense to learn about possible attributes.\n  // Hover to view descriptions of existing attributes.\n  // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387\n  \"version\": \"0.2.0\",\n  \"configurations\": [\n    {\n      \"type\": \"chrome\",\n      \"request\": \"launch\",\n      \"name\": \"Launch Chrome against localhost\",\n      \"url\": \"http://localhost:3000\",\n      \"webRoot\": \"${workspaceFolder}/src\"\n    }\n  ]\n}"},{"text":"npm start"}]},{"name":"Debug Website","noteArray":[{"text":"Go to html page (You must be on the index.html Page), hit run and debug twice. pick web app chrome click run and debug.\nIf this doesn't work, delete vs config files and try again."},{"text":"OLD\ncreate a launch.json file. select an environment: chrome.\nOpen html page in liver server, copy the address from chrome and paste it in the launch.json file. in the \"url\" field. => \"url\": \"http://127.0.0.1:5502\",\nclick run start debuging;\nthe next time you do this make sure you open the html file with live server then click run start debugging.\n\n{\n  // Use IntelliSense to learn about possible attributes.\n  // Hover to view descriptions of existing attributes.\n  // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387\n  \"version\": \"0.2.0\",\n  \"configurations\": [\n    {\n      \"type\": \"chrome\",\n      \"request\": \"launch\",\n      \"name\": \"Launch Chrome against localhost\",\n      \"url\": \"http://127.0.0.1:5502\",\n      \"webRoot\": \"${workspaceFolder}\"\n    }\n  ]\n}"}]},{"name":"Peacock","noteArray":[{"text":"Press F1 to bring up command palette.\nType peacock.\nSelect change a favorite color."}]},{"name":"Settings","noteArray":[{"text":"Go to settings and search for:\nWindow Zoom Level => Set to -1"}]},{"name":"short cuts","noteArray":[{"text":"F1                      Opens command palette.\nF8                      Go to next error or warning.\nF11                    Toggle full screen.\nF12                    Go to Definition.\n\nAlt+Click                                     Insert cursor.\ncontrol + i                                  Show's auto sugustions.\nshift + alt + down arrow          Copy a line of code.\nCtrl+Shift+L                              Select all occurrences of current selection\n\ncontrol + left or right arrow.             Move through code.\nAlt+ ↑ / ↓                                              Move line up/down.\nshift + alt + down arrow                   Copy a line of code.\nCtrl+F                                                  Find.\nCtrl+K S                                              Save All.\nctrl +`                                                  Goto command line.\nCtrl+K Z                                              Zen Mode (Esc to exit).\n\nCtrl+d                     Select word Ctrl+d again to select next matching word and again\nCtrl+ OR Ctrrl -      Zoom in/out\nCtrl+B                     Toggle Sidebar visibility\n\nClick a tag and it will highlight it's pair.\n\nDebug\nF9 Toggle breakpoint\nF5 Start/Continue\nShift+F5 Stop\nF11 / Shift+F11 Step into/out\nF10 Step over\nCtrl+K Ctrl+I Show hover"}]},{"name":"Terminal","noteArray":[{"text":"Click the book like icon to Split Terminals"},{"text":"Rename Terminal=>\nClick View Command Pallete\nType Terminal Rename\nType What you want for the name."}]}]},{"name":"WebPack","subFolderArray":[{"name":"loader","noteArray":[{"text":"npm install style-loader css-loader"},{"text":"update webpack-dev-js with the following =>\nconst path = require(\"path\");\n\nmodule.exports = {\n  entry: {\n    main: [\"./src/main.js\"],\n  },\n  mode: \"development\",\n  output: {\n    filename: \"[name]-bundle.js\",\n    path: path.resolve(__dirname, \"../dist\"),\n    publicPath: \"/\",\n  },\n  devServer: {\n    contentBase: \"dist\",\n  },\n  module: {\n    rules: [\n      {\n        test: /\\.css$/,\n        use: [\n          {\n            loader: \"style-loader\"\n          },\n          {\n            loader: \"css-loader\"\n          }\n        ]\n      }\n    ]\n  }\n};"}]},{"name":"SetUp Project","noteArray":[{"text":"Make three folders. config dist src\ngit init\nMake .gitignore file => node_modules/*\nnpm init\n\nOpen in VS code => code .\nYou can type webpack help to see a list of help items.\nCreate a config file => touch config/webpack.dev.js\n\nAdd file => touch src/main.js"},{"text":"Add the following to the file: webpack.dev.js =>\nconst path = require(\"path\");\n\nmodule.exports = {\n  entry: {\n    main: \"./src/main.js\",\n  },\n  mode: \"development\",\n  output: {\n    filename: \"[name]-bundle.js\",\n    path: path.resolve(__dirname, \"../dist\"),\n  },\n};"},{"text":"Now you have to point to the config file =>type:\nwebpack --config=config/webpack.dev.js\nNow you can look at your main.bundle.js, it has output."},{"text":"Add the following to the index.html file =>\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>Document</title>\n  </head>\n  <body>\n    <h1>David E. Berkheimer</h1>\n    <script src=\"main-bundle.js\"></script>\n  </body>\n</html>"},{"text":"Update webpack.dev.js file with the following =>\nconst path = require(\"path\");\n\nmodule.exports = {\n  entry: {\n    main: [\"./src/main.js\"],\n  },\n  mode: \"development\",\n  output: {\n    filename: \"[name]-bundle.js\",\n    path: path.resolve(__dirname, \"../dist\"),\n    publicPath: \"/\",\n  },\n  devServer: {\n    contentBase: \"dist\",\n  },\n};"},{"text":"npm install webpack-dev-server\nnpm install webpack\nnpm install webpack-cli\nTo run the project type: =>\nwebpack-dev-server --config=config/webpack.dev.js"},{"text":"To run the project type: =>\nwebpack-dev-server --config=config/webpack.dev.js\n\nLook for the following hold down control key and click on it. This will then display in your browser.\n Project is running at http://localhost:8081/"}]}]}],"fileType":"ElectronFileCab2020November"}